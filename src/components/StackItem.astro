---
import { Image } from "astro:assets"

import {projectImageTypes} from '../const.js'

import EmbeddedMp4Gif from '../components/media/Mp4Gif.astro'

const {classes, slug, title, projectType, description, imageObject, imageType, year} = Astro.props

/*
* We want to create a shortened description but it should not cut through a word but end in a whitespace
* to make it more readable.
*/
// cut the description at a desired minimum length
const minimumDescriptionLength = 170;
const descriptionEnd = description.slice(minimumDescriptionLength, description.length)

// find the first whitespace after the cut
const firstWhiteSpaceIndex = descriptionEnd.indexOf(" ")

// perform the final truncation of the description to the target whitespace 
const shortDescription = description.slice(0, minimumDescriptionLength + firstWhiteSpaceIndex) + " ..."
---

<style is:global>
    .stack-item {
        display: grid;
        gap: 1rem;
        grid-template-columns: 1fr 1fr;
        
        height: 100vh;
        width: 98vw;

        position: -webkit-sticky;
        position: sticky;

        top: 0;

        padding: 5vw;

        color: white;
        position: absolute;
        z-index: 5;
    }

    .stack-item--col {
        padding: 1rem;
        height: 100%;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
    }

    .stack-item--text-area {
        visibility: hidden;
        opacity: 0;
        transition: opacity 0.2s ease-in-out;
    }

    .stack-item .stack-item--text-title {
        font-size: 3rem;
        font-family: "Poppins";
    }

    .stack-item--text-sub-title {
        font-size: 1.5rem;
        font-family: "Poppins";
        margin-bottom: 1rem;
    }

    .stack-item--image-area {
        position: relative;
        width: 30vw;
        aspect-ratio: 1;
        overflow: hidden;
    }

    @media screen and (max-width: 1400px) {
        /* Increase image width on medium screens */
        .stack-item--image-area {
            width: 40vw;
        }
    }

    .stack-item--image-area:hover {
        filter: brightness(90%);
    }

    .stack-item--image {
        width: 100%;
        height: 100%;
        object-fit: cover;
        object-position: center;
        border: 1px solid rgb(59, 59, 59);
        filter: grayscale(20%);
    }

    .stack-item--gif {
        min-width: 100%;
        min-height: 100%;
        object-fit: cover;
    }

    .stack-item--image-text {
        position: absolute;
        inset: 0;
        width: 100%;
        height: 100%;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }

    .stack-item--image-title-area, 
    .stack-item--image-text-bottom {
        background: rgba(0, 0, 0, 0.3);
        padding: 1rem;
        width: 100%;
    }

    .stack-item--image-title {
        font-size: 1.5rem;
        font-family: 'Lastica', sans-serif;
    }

    .stack-item--image-sub-title {
        font-size: 1rem;
    }

    .stack-item--image-short-description {
        margin-bottom: 1rem;
        overflow: hidden;
        text-overflow: ellipsis;
        
        display: -moz-box;
        display: -webkit-box; 
        -webkit-box-orient: vertical; 
        -webkit-line-clamp: 3; 
        overflow: hidden; 
        text-overflow: ellipsis; 
    }

    .stack-item--image-link {
        transition: color 0.2s ease-in-out;
        padding: 0.5rem 0rem;
        font-weight: bold;
        border-radius: 0.25rem;
        cursor: pointer;
        text-decoration: underline;
    }

    .stack-item--image-link:hover {
        color: rgba(255, 255, 255, 0.8);
    }

    /* Styles for hiding / showing stack-items */
    .stack-item .stack-item--image-area{
        transition: transform 0.5s ease-in-out, filter 0.2s ease-in-out;
    }
    .stack-item.focus .stack-item--image-area {
        transform: rotate(0deg);
    }

    .stack-item.passed .stack-item--image-area {
        transform: translate(-50%, -120vh) rotate(20deg);
    }

    .stack-item.focus.display-at-top {
        z-index: 10;
    }

    .stack-item.focus .stack-item--text-area {
        visibility: visible;
        opacity: 1;
    }

    @media (max-width: 762px) {
        .stack-item {
            padding: 0;
            height: 90vh;
        }
        .stack-item--col {
            padding: 0;
            height: 90vh;
        }
        .stack-item .stack-item--text-area {
            display: none;
        }

        .stack-item .stack-item--image-area {
            height: 70vh;
            width: 80vw;
            margin: 5vh 5vw;
        }

        .stack-item.passed .stack-item--image-area {
            transform: translateX(-100%);
        }
    }

</style>

<div class={`stack-item ${classes}`}>
    <div class="stack-item--col stack-item--text-area">
        <h2 class="stack-item--text-title">{title}</h2>
        <div class="stack-item--text-sub-title">{projectType}</div>
            
        <p class="stack-item--text-description">
            {description}
        </p>
    </div>
    <div class="stack-item--col">
        <a href={`/projects/${slug}`} class="stack-item--image-area">
            {(imageType === projectImageTypes.image) ? 
                <Image class="stack-item--image" src={imageObject} alt="Image" />
            : (imageType === projectImageTypes.mp4Gif) ?
                <EmbeddedMp4Gif classes="stack-item--gif" src={imageObject} />
            : null
            }
            <div class="stack-item--image-text">
                <div class="stack-item--image-title-area">
                    <p class="stack-item--image-title">{title}</p>
                    <small class="stack-item--image-sub-title">{year}</small>
                </div>
                <div class="stack-item--image-text-bottom">
                    <p class="stack-item--image-short-description">
                        {shortDescription}
                    </p>
                    <p 
                        class="stack-item--image-link"
                        
                    >
                        More Details
                    </p>
                </div>
            </div>
        </a>
    </div>
</div>
